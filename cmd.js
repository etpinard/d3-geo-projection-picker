#!/usr/bin/env node

const fs = require('fs')
const parseArg = require('minimist')
const picker = require('./')

const argv = parseArg(process.argv.slice(2), {
  string: 'output',
  alias: { output: 'o' }
})

// Usage:
//
// node d3-geo-projection-picker proj1 proj2 proj3 > file.js
// node d3-geo-projection-picker proj1 proj2 proj3 -o file.js
// node d3-geo-projection-picker proj1 proj2 proj3 --output file.js
//
// pass any of
//
// https://github.com/rollup/rollup/wiki/JavaScript-API#bundlegenerate-options-
//
// as e.g.
//
// node d3-geo-projection-picker proj1 proj2 proj3 --format umd --moduleName d3 > file.js

const opts = {
  format: 'cjs',
  banner: '/* File auto-generated by d3-geo-projection-picker */\n'
}

Object.keys(argv).forEach((k) => {
  if (k === '_' || k === 'o') return

  opts[k] = argv[k]
})

picker(argv._, opts, (err, code) => {
  if (err) throw err

  if (argv.o) {
    fs.writeFile(argv.o, code, (err) => {
      if (err) throw err
    })
  } else {
    process.stdout.write(code)
  }
})
